#############################################################################
# Makefile for building: src
# Generated by qmake (3.0) (Qt 5.3.2)
# Project:  src.pro
# Template: subdirs
# Command: C:\Qt\5.3.2\bin\qmake.exe -o Makefile src.pro
#############################################################################

MAKEFILE      = Makefile

first: make_first
QMAKE         = C:\Qt\5.3.2\bin\qmake.exe
DEL_FILE      = del
CHK_DIR_EXISTS= if not exist
MKDIR         = mkdir
COPY          = copy /y
COPY_FILE     = $(COPY)
COPY_DIR      = xcopy /s /q /y /i
INSTALL_FILE  = $(COPY_FILE)
INSTALL_PROGRAM = $(COPY_FILE)
INSTALL_DIR   = $(COPY_DIR)
DEL_FILE      = del
SYMLINK       = copy /y
DEL_DIR       = rmdir
MOVE          = move
SUBTARGETS    =  \
		sub-assistant \
		sub-pixeltool \
		sub-qtestlib \
		sub-designer \
		sub-linguist \
		sub-qtpaths \
		sub-windeployqt \
		sub-qtdiag


sub-assistant-qmake_all:  FORCE
	@if not exist assistant\ mkdir assistant\ & if not exist assistant\ exit 1
	cd assistant\ && $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\assistant\assistant.pro -o Makefile
	cd assistant\ && $(MAKE) -f Makefile qmake_all
sub-assistant: FORCE
	@if not exist assistant\ mkdir assistant\ & if not exist assistant\ exit 1
	cd assistant\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\assistant\assistant.pro -o Makefile ) && $(MAKE) -f Makefile
sub-assistant-make_first: FORCE
	@if not exist assistant\ mkdir assistant\ & if not exist assistant\ exit 1
	cd assistant\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\assistant\assistant.pro -o Makefile ) && $(MAKE) -f Makefile 
sub-assistant-all: FORCE
	@if not exist assistant\ mkdir assistant\ & if not exist assistant\ exit 1
	cd assistant\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\assistant\assistant.pro -o Makefile ) && $(MAKE) -f Makefile all
sub-assistant-clean: FORCE
	@if not exist assistant\ mkdir assistant\ & if not exist assistant\ exit 1
	cd assistant\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\assistant\assistant.pro -o Makefile ) && $(MAKE) -f Makefile clean
sub-assistant-distclean: FORCE
	@if not exist assistant\ mkdir assistant\ & if not exist assistant\ exit 1
	cd assistant\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\assistant\assistant.pro -o Makefile ) && $(MAKE) -f Makefile distclean
sub-assistant-install_subtargets: FORCE
	@if not exist assistant\ mkdir assistant\ & if not exist assistant\ exit 1
	cd assistant\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\assistant\assistant.pro -o Makefile ) && $(MAKE) -f Makefile install
sub-assistant-uninstall_subtargets: FORCE
	@if not exist assistant\ mkdir assistant\ & if not exist assistant\ exit 1
	cd assistant\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\assistant\assistant.pro -o Makefile ) && $(MAKE) -f Makefile uninstall
sub-pixeltool-qmake_all:  FORCE
	@if not exist pixeltool\ mkdir pixeltool\ & if not exist pixeltool\ exit 1
	cd pixeltool\ && $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\pixeltool\pixeltool.pro -o Makefile
	cd pixeltool\ && $(MAKE) -f Makefile qmake_all
sub-pixeltool: FORCE
	@if not exist pixeltool\ mkdir pixeltool\ & if not exist pixeltool\ exit 1
	cd pixeltool\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\pixeltool\pixeltool.pro -o Makefile ) && $(MAKE) -f Makefile
sub-pixeltool-make_first: FORCE
	@if not exist pixeltool\ mkdir pixeltool\ & if not exist pixeltool\ exit 1
	cd pixeltool\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\pixeltool\pixeltool.pro -o Makefile ) && $(MAKE) -f Makefile 
sub-pixeltool-all: FORCE
	@if not exist pixeltool\ mkdir pixeltool\ & if not exist pixeltool\ exit 1
	cd pixeltool\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\pixeltool\pixeltool.pro -o Makefile ) && $(MAKE) -f Makefile all
sub-pixeltool-clean: FORCE
	@if not exist pixeltool\ mkdir pixeltool\ & if not exist pixeltool\ exit 1
	cd pixeltool\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\pixeltool\pixeltool.pro -o Makefile ) && $(MAKE) -f Makefile clean
sub-pixeltool-distclean: FORCE
	@if not exist pixeltool\ mkdir pixeltool\ & if not exist pixeltool\ exit 1
	cd pixeltool\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\pixeltool\pixeltool.pro -o Makefile ) && $(MAKE) -f Makefile distclean
sub-pixeltool-install_subtargets: FORCE
	@if not exist pixeltool\ mkdir pixeltool\ & if not exist pixeltool\ exit 1
	cd pixeltool\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\pixeltool\pixeltool.pro -o Makefile ) && $(MAKE) -f Makefile install
sub-pixeltool-uninstall_subtargets: FORCE
	@if not exist pixeltool\ mkdir pixeltool\ & if not exist pixeltool\ exit 1
	cd pixeltool\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\pixeltool\pixeltool.pro -o Makefile ) && $(MAKE) -f Makefile uninstall
sub-qtestlib-qmake_all:  FORCE
	@if not exist qtestlib\ mkdir qtestlib\ & if not exist qtestlib\ exit 1
	cd qtestlib\ && $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtestlib\qtestlib.pro -o Makefile
	cd qtestlib\ && $(MAKE) -f Makefile qmake_all
sub-qtestlib: FORCE
	@if not exist qtestlib\ mkdir qtestlib\ & if not exist qtestlib\ exit 1
	cd qtestlib\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtestlib\qtestlib.pro -o Makefile ) && $(MAKE) -f Makefile
sub-qtestlib-make_first: FORCE
	@if not exist qtestlib\ mkdir qtestlib\ & if not exist qtestlib\ exit 1
	cd qtestlib\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtestlib\qtestlib.pro -o Makefile ) && $(MAKE) -f Makefile 
sub-qtestlib-all: FORCE
	@if not exist qtestlib\ mkdir qtestlib\ & if not exist qtestlib\ exit 1
	cd qtestlib\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtestlib\qtestlib.pro -o Makefile ) && $(MAKE) -f Makefile all
sub-qtestlib-clean: FORCE
	@if not exist qtestlib\ mkdir qtestlib\ & if not exist qtestlib\ exit 1
	cd qtestlib\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtestlib\qtestlib.pro -o Makefile ) && $(MAKE) -f Makefile clean
sub-qtestlib-distclean: FORCE
	@if not exist qtestlib\ mkdir qtestlib\ & if not exist qtestlib\ exit 1
	cd qtestlib\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtestlib\qtestlib.pro -o Makefile ) && $(MAKE) -f Makefile distclean
sub-qtestlib-install_subtargets: FORCE
	@if not exist qtestlib\ mkdir qtestlib\ & if not exist qtestlib\ exit 1
	cd qtestlib\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtestlib\qtestlib.pro -o Makefile ) && $(MAKE) -f Makefile install
sub-qtestlib-uninstall_subtargets: FORCE
	@if not exist qtestlib\ mkdir qtestlib\ & if not exist qtestlib\ exit 1
	cd qtestlib\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtestlib\qtestlib.pro -o Makefile ) && $(MAKE) -f Makefile uninstall
sub-designer-qmake_all:  FORCE
	@if not exist designer\ mkdir designer\ & if not exist designer\ exit 1
	cd designer\ && $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\designer\designer.pro -o Makefile
	cd designer\ && $(MAKE) -f Makefile qmake_all
sub-designer: FORCE
	@if not exist designer\ mkdir designer\ & if not exist designer\ exit 1
	cd designer\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\designer\designer.pro -o Makefile ) && $(MAKE) -f Makefile
sub-designer-make_first: FORCE
	@if not exist designer\ mkdir designer\ & if not exist designer\ exit 1
	cd designer\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\designer\designer.pro -o Makefile ) && $(MAKE) -f Makefile 
sub-designer-all: FORCE
	@if not exist designer\ mkdir designer\ & if not exist designer\ exit 1
	cd designer\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\designer\designer.pro -o Makefile ) && $(MAKE) -f Makefile all
sub-designer-clean: FORCE
	@if not exist designer\ mkdir designer\ & if not exist designer\ exit 1
	cd designer\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\designer\designer.pro -o Makefile ) && $(MAKE) -f Makefile clean
sub-designer-distclean: FORCE
	@if not exist designer\ mkdir designer\ & if not exist designer\ exit 1
	cd designer\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\designer\designer.pro -o Makefile ) && $(MAKE) -f Makefile distclean
sub-designer-install_subtargets: FORCE
	@if not exist designer\ mkdir designer\ & if not exist designer\ exit 1
	cd designer\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\designer\designer.pro -o Makefile ) && $(MAKE) -f Makefile install
sub-designer-uninstall_subtargets: FORCE
	@if not exist designer\ mkdir designer\ & if not exist designer\ exit 1
	cd designer\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\designer\designer.pro -o Makefile ) && $(MAKE) -f Makefile uninstall
sub-linguist-qmake_all: sub-designer-qmake_all FORCE
	@if not exist linguist\ mkdir linguist\ & if not exist linguist\ exit 1
	cd linguist\ && $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\linguist\linguist.pro -o Makefile
	cd linguist\ && $(MAKE) -f Makefile qmake_all
sub-linguist: sub-designer FORCE
	@if not exist linguist\ mkdir linguist\ & if not exist linguist\ exit 1
	cd linguist\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\linguist\linguist.pro -o Makefile ) && $(MAKE) -f Makefile
sub-linguist-make_first: sub-designer-make_first FORCE
	@if not exist linguist\ mkdir linguist\ & if not exist linguist\ exit 1
	cd linguist\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\linguist\linguist.pro -o Makefile ) && $(MAKE) -f Makefile 
sub-linguist-all: sub-designer-all FORCE
	@if not exist linguist\ mkdir linguist\ & if not exist linguist\ exit 1
	cd linguist\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\linguist\linguist.pro -o Makefile ) && $(MAKE) -f Makefile all
sub-linguist-clean: sub-designer-clean FORCE
	@if not exist linguist\ mkdir linguist\ & if not exist linguist\ exit 1
	cd linguist\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\linguist\linguist.pro -o Makefile ) && $(MAKE) -f Makefile clean
sub-linguist-distclean: sub-designer-distclean FORCE
	@if not exist linguist\ mkdir linguist\ & if not exist linguist\ exit 1
	cd linguist\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\linguist\linguist.pro -o Makefile ) && $(MAKE) -f Makefile distclean
sub-linguist-install_subtargets: sub-designer-install_subtargets FORCE
	@if not exist linguist\ mkdir linguist\ & if not exist linguist\ exit 1
	cd linguist\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\linguist\linguist.pro -o Makefile ) && $(MAKE) -f Makefile install
sub-linguist-uninstall_subtargets: sub-designer-uninstall_subtargets FORCE
	@if not exist linguist\ mkdir linguist\ & if not exist linguist\ exit 1
	cd linguist\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\linguist\linguist.pro -o Makefile ) && $(MAKE) -f Makefile uninstall
sub-qtpaths-qmake_all:  FORCE
	@if not exist qtpaths\ mkdir qtpaths\ & if not exist qtpaths\ exit 1
	cd qtpaths\ && $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtpaths\qtpaths.pro -o Makefile
	cd qtpaths\ && $(MAKE) -f Makefile qmake_all
sub-qtpaths: FORCE
	@if not exist qtpaths\ mkdir qtpaths\ & if not exist qtpaths\ exit 1
	cd qtpaths\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtpaths\qtpaths.pro -o Makefile ) && $(MAKE) -f Makefile
sub-qtpaths-make_first: FORCE
	@if not exist qtpaths\ mkdir qtpaths\ & if not exist qtpaths\ exit 1
	cd qtpaths\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtpaths\qtpaths.pro -o Makefile ) && $(MAKE) -f Makefile 
sub-qtpaths-all: FORCE
	@if not exist qtpaths\ mkdir qtpaths\ & if not exist qtpaths\ exit 1
	cd qtpaths\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtpaths\qtpaths.pro -o Makefile ) && $(MAKE) -f Makefile all
sub-qtpaths-clean: FORCE
	@if not exist qtpaths\ mkdir qtpaths\ & if not exist qtpaths\ exit 1
	cd qtpaths\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtpaths\qtpaths.pro -o Makefile ) && $(MAKE) -f Makefile clean
sub-qtpaths-distclean: FORCE
	@if not exist qtpaths\ mkdir qtpaths\ & if not exist qtpaths\ exit 1
	cd qtpaths\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtpaths\qtpaths.pro -o Makefile ) && $(MAKE) -f Makefile distclean
sub-qtpaths-install_subtargets: FORCE
	@if not exist qtpaths\ mkdir qtpaths\ & if not exist qtpaths\ exit 1
	cd qtpaths\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtpaths\qtpaths.pro -o Makefile ) && $(MAKE) -f Makefile install
sub-qtpaths-uninstall_subtargets: FORCE
	@if not exist qtpaths\ mkdir qtpaths\ & if not exist qtpaths\ exit 1
	cd qtpaths\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtpaths\qtpaths.pro -o Makefile ) && $(MAKE) -f Makefile uninstall
sub-windeployqt-qmake_all:  FORCE
	@if not exist windeployqt\ mkdir windeployqt\ & if not exist windeployqt\ exit 1
	cd windeployqt\ && $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\windeployqt\windeployqt.pro -o Makefile
	cd windeployqt\ && $(MAKE) -f Makefile qmake_all
sub-windeployqt: FORCE
	@if not exist windeployqt\ mkdir windeployqt\ & if not exist windeployqt\ exit 1
	cd windeployqt\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\windeployqt\windeployqt.pro -o Makefile ) && $(MAKE) -f Makefile
sub-windeployqt-make_first: FORCE
	@if not exist windeployqt\ mkdir windeployqt\ & if not exist windeployqt\ exit 1
	cd windeployqt\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\windeployqt\windeployqt.pro -o Makefile ) && $(MAKE) -f Makefile 
sub-windeployqt-all: FORCE
	@if not exist windeployqt\ mkdir windeployqt\ & if not exist windeployqt\ exit 1
	cd windeployqt\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\windeployqt\windeployqt.pro -o Makefile ) && $(MAKE) -f Makefile all
sub-windeployqt-clean: FORCE
	@if not exist windeployqt\ mkdir windeployqt\ & if not exist windeployqt\ exit 1
	cd windeployqt\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\windeployqt\windeployqt.pro -o Makefile ) && $(MAKE) -f Makefile clean
sub-windeployqt-distclean: FORCE
	@if not exist windeployqt\ mkdir windeployqt\ & if not exist windeployqt\ exit 1
	cd windeployqt\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\windeployqt\windeployqt.pro -o Makefile ) && $(MAKE) -f Makefile distclean
sub-windeployqt-install_subtargets: FORCE
	@if not exist windeployqt\ mkdir windeployqt\ & if not exist windeployqt\ exit 1
	cd windeployqt\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\windeployqt\windeployqt.pro -o Makefile ) && $(MAKE) -f Makefile install
sub-windeployqt-uninstall_subtargets: FORCE
	@if not exist windeployqt\ mkdir windeployqt\ & if not exist windeployqt\ exit 1
	cd windeployqt\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\windeployqt\windeployqt.pro -o Makefile ) && $(MAKE) -f Makefile uninstall
sub-qtdiag-qmake_all:  FORCE
	@if not exist qtdiag\ mkdir qtdiag\ & if not exist qtdiag\ exit 1
	cd qtdiag\ && $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtdiag\qtdiag.pro -o Makefile
	cd qtdiag\ && $(MAKE) -f Makefile qmake_all
sub-qtdiag: FORCE
	@if not exist qtdiag\ mkdir qtdiag\ & if not exist qtdiag\ exit 1
	cd qtdiag\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtdiag\qtdiag.pro -o Makefile ) && $(MAKE) -f Makefile
sub-qtdiag-make_first: FORCE
	@if not exist qtdiag\ mkdir qtdiag\ & if not exist qtdiag\ exit 1
	cd qtdiag\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtdiag\qtdiag.pro -o Makefile ) && $(MAKE) -f Makefile 
sub-qtdiag-all: FORCE
	@if not exist qtdiag\ mkdir qtdiag\ & if not exist qtdiag\ exit 1
	cd qtdiag\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtdiag\qtdiag.pro -o Makefile ) && $(MAKE) -f Makefile all
sub-qtdiag-clean: FORCE
	@if not exist qtdiag\ mkdir qtdiag\ & if not exist qtdiag\ exit 1
	cd qtdiag\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtdiag\qtdiag.pro -o Makefile ) && $(MAKE) -f Makefile clean
sub-qtdiag-distclean: FORCE
	@if not exist qtdiag\ mkdir qtdiag\ & if not exist qtdiag\ exit 1
	cd qtdiag\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtdiag\qtdiag.pro -o Makefile ) && $(MAKE) -f Makefile distclean
sub-qtdiag-install_subtargets: FORCE
	@if not exist qtdiag\ mkdir qtdiag\ & if not exist qtdiag\ exit 1
	cd qtdiag\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtdiag\qtdiag.pro -o Makefile ) && $(MAKE) -f Makefile install
sub-qtdiag-uninstall_subtargets: FORCE
	@if not exist qtdiag\ mkdir qtdiag\ & if not exist qtdiag\ exit 1
	cd qtdiag\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtdiag\qtdiag.pro -o Makefile ) && $(MAKE) -f Makefile uninstall

Makefile: src.pro ../.qmake.conf ../.qmake.cache C:/Qt/5.3.2/mkspecs/win32-g++/qmake.conf C:/Qt/5.3.2/mkspecs/features/spec_pre.prf \
		C:/Qt/5.3.2/mkspecs/qdevice.pri \
		C:/Qt/5.3.2/mkspecs/features/device_config.prf \
		C:/Qt/5.3.2/mkspecs/common/shell-win32.conf \
		C:/Qt/5.3.2/mkspecs/qconfig.pri \
		C:/Qt/5.3.2/mkspecs/modules/qt_lib_bootstrap_private.pri \
		C:/Qt/5.3.2/mkspecs/modules/qt_lib_concurrent.pri \
		C:/Qt/5.3.2/mkspecs/modules/qt_lib_concurrent_private.pri \
		C:/Qt/5.3.2/mkspecs/modules/qt_lib_core.pri \
		C:/Qt/5.3.2/mkspecs/modules/qt_lib_core_private.pri \
		C:/Qt/5.3.2/mkspecs/modules/qt_lib_gui.pri \
		C:/Qt/5.3.2/mkspecs/modules/qt_lib_gui_private.pri \
		C:/Qt/5.3.2/mkspecs/modules/qt_lib_network.pri \
		C:/Qt/5.3.2/mkspecs/modules/qt_lib_network_private.pri \
		C:/Qt/5.3.2/mkspecs/modules/qt_lib_platformsupport_private.pri \
		C:/Qt/5.3.2/mkspecs/modules/qt_lib_printsupport.pri \
		C:/Qt/5.3.2/mkspecs/modules/qt_lib_printsupport_private.pri \
		C:/Qt/5.3.2/mkspecs/modules/qt_lib_sql.pri \
		C:/Qt/5.3.2/mkspecs/modules/qt_lib_sql_private.pri \
		C:/Qt/5.3.2/mkspecs/modules/qt_lib_testlib.pri \
		C:/Qt/5.3.2/mkspecs/modules/qt_lib_testlib_private.pri \
		C:/Qt/5.3.2/mkspecs/modules/qt_lib_widgets.pri \
		C:/Qt/5.3.2/mkspecs/modules/qt_lib_widgets_private.pri \
		C:/Qt/5.3.2/mkspecs/modules/qt_lib_xml.pri \
		C:/Qt/5.3.2/mkspecs/modules/qt_lib_xml_private.pri \
		C:/Qt/5.3.2/mkspecs/modules/qt_plugin_qgenericbearer.pri \
		C:/Qt/5.3.2/mkspecs/modules/qt_plugin_qico.pri \
		C:/Qt/5.3.2/mkspecs/modules/qt_plugin_qminimal.pri \
		C:/Qt/5.3.2/mkspecs/modules/qt_plugin_qnativewifibearer.pri \
		C:/Qt/5.3.2/mkspecs/modules/qt_plugin_qtaccessiblewidgets.pri \
		C:/Qt/5.3.2/mkspecs/modules/qt_plugin_qwindows.pri \
		C:/Qt/5.3.2/mkspecs/modules/qt_plugin_windowsprintersupport.pri \
		C:/Qt/5.3.2/mkspecs/modules/qt_tool_qdoc.pri \
		C:/Qt/5.3.2/mkspecs/modules/qt_tool_qlalr.pri \
		C:/Qt/5.3.2/mkspecs/modules/qt_tool_syncqt.pri \
		C:/Qt/5.3.2/mkspecs/modules/qt_tool_uic.pri \
		C:/Qt/5.3.2/mkspecs/features/qt_functions.prf \
		C:/Qt/5.3.2/mkspecs/features/qt_config.prf \
		C:/Qt/5.3.2/mkspecs/features/win32/qt_config.prf \
		C:/Qt/5.3.2/mkspecs/win32-g++/qmake.conf \
		C:/Qt/5.3.2/mkspecs/features/spec_post.prf \
		C:/Qt/5.3.2/mkspecs/qmodule.pri \
		C:/Qt/5.3.2/mkspecs/features/qt_build_config.prf \
		../.qmake.conf \
		../.qmake.cache \
		C:/Qt/5.3.2/mkspecs/features/exclusive_builds.prf \
		C:/Qt/5.3.2/mkspecs/features/default_pre.prf \
		C:/Qt/5.3.2/mkspecs/features/win32/default_pre.prf \
		C:/Qt/5.3.2/mkspecs/features/resolve_config.prf \
		C:/Qt/5.3.2/mkspecs/features/exclusive_builds_post.prf \
		C:/Qt/5.3.2/mkspecs/features/default_post.prf \
		C:/Qt/5.3.2/mkspecs/features/qt_example_installs.prf \
		C:/Qt/5.3.2/mkspecs/features/exceptions_off.prf \
		C:/Qt/5.3.2/mkspecs/features/qt_docs_targets.prf \
		C:/Qt/5.3.2/mkspecs/features/win32/rtti.prf \
		C:/Qt/5.3.2/mkspecs/features/precompile_header.prf \
		C:/Qt/5.3.2/mkspecs/features/warn_on.prf \
		C:/Qt/5.3.2/mkspecs/features/win32/windows.prf \
		C:/Qt/5.3.2/mkspecs/features/testcase_targets.prf \
		C:/Qt/5.3.2/mkspecs/features/yacc.prf \
		C:/Qt/5.3.2/mkspecs/features/lex.prf \
		src.pro
	$(QMAKE) -o Makefile src.pro
C:\Qt\5.3.2\mkspecs\features\spec_pre.prf:
C:\Qt\5.3.2\mkspecs\qdevice.pri:
C:\Qt\5.3.2\mkspecs\features\device_config.prf:
C:\Qt\5.3.2\mkspecs\common\shell-win32.conf:
C:\Qt\5.3.2\mkspecs\qconfig.pri:
C:\Qt\5.3.2\mkspecs\modules\qt_lib_bootstrap_private.pri:
C:\Qt\5.3.2\mkspecs\modules\qt_lib_concurrent.pri:
C:\Qt\5.3.2\mkspecs\modules\qt_lib_concurrent_private.pri:
C:\Qt\5.3.2\mkspecs\modules\qt_lib_core.pri:
C:\Qt\5.3.2\mkspecs\modules\qt_lib_core_private.pri:
C:\Qt\5.3.2\mkspecs\modules\qt_lib_gui.pri:
C:\Qt\5.3.2\mkspecs\modules\qt_lib_gui_private.pri:
C:\Qt\5.3.2\mkspecs\modules\qt_lib_network.pri:
C:\Qt\5.3.2\mkspecs\modules\qt_lib_network_private.pri:
C:\Qt\5.3.2\mkspecs\modules\qt_lib_platformsupport_private.pri:
C:\Qt\5.3.2\mkspecs\modules\qt_lib_printsupport.pri:
C:\Qt\5.3.2\mkspecs\modules\qt_lib_printsupport_private.pri:
C:\Qt\5.3.2\mkspecs\modules\qt_lib_sql.pri:
C:\Qt\5.3.2\mkspecs\modules\qt_lib_sql_private.pri:
C:\Qt\5.3.2\mkspecs\modules\qt_lib_testlib.pri:
C:\Qt\5.3.2\mkspecs\modules\qt_lib_testlib_private.pri:
C:\Qt\5.3.2\mkspecs\modules\qt_lib_widgets.pri:
C:\Qt\5.3.2\mkspecs\modules\qt_lib_widgets_private.pri:
C:\Qt\5.3.2\mkspecs\modules\qt_lib_xml.pri:
C:\Qt\5.3.2\mkspecs\modules\qt_lib_xml_private.pri:
C:\Qt\5.3.2\mkspecs\modules\qt_plugin_qgenericbearer.pri:
C:\Qt\5.3.2\mkspecs\modules\qt_plugin_qico.pri:
C:\Qt\5.3.2\mkspecs\modules\qt_plugin_qminimal.pri:
C:\Qt\5.3.2\mkspecs\modules\qt_plugin_qnativewifibearer.pri:
C:\Qt\5.3.2\mkspecs\modules\qt_plugin_qtaccessiblewidgets.pri:
C:\Qt\5.3.2\mkspecs\modules\qt_plugin_qwindows.pri:
C:\Qt\5.3.2\mkspecs\modules\qt_plugin_windowsprintersupport.pri:
C:\Qt\5.3.2\mkspecs\modules\qt_tool_qdoc.pri:
C:\Qt\5.3.2\mkspecs\modules\qt_tool_qlalr.pri:
C:\Qt\5.3.2\mkspecs\modules\qt_tool_syncqt.pri:
C:\Qt\5.3.2\mkspecs\modules\qt_tool_uic.pri:
C:\Qt\5.3.2\mkspecs\features\qt_functions.prf:
C:\Qt\5.3.2\mkspecs\features\qt_config.prf:
C:\Qt\5.3.2\mkspecs\features\win32\qt_config.prf:
C:\Qt\5.3.2\mkspecs\win32-g++\qmake.conf:
C:\Qt\5.3.2\mkspecs\features\spec_post.prf:
C:\Qt\5.3.2\mkspecs\qmodule.pri:
C:\Qt\5.3.2\mkspecs\features\qt_build_config.prf:
..\.qmake.conf:
..\.qmake.cache:
C:\Qt\5.3.2\mkspecs\features\exclusive_builds.prf:
C:\Qt\5.3.2\mkspecs\features\default_pre.prf:
C:\Qt\5.3.2\mkspecs\features\win32\default_pre.prf:
C:\Qt\5.3.2\mkspecs\features\resolve_config.prf:
C:\Qt\5.3.2\mkspecs\features\exclusive_builds_post.prf:
C:\Qt\5.3.2\mkspecs\features\default_post.prf:
C:\Qt\5.3.2\mkspecs\features\qt_example_installs.prf:
C:\Qt\5.3.2\mkspecs\features\exceptions_off.prf:
C:\Qt\5.3.2\mkspecs\features\qt_docs_targets.prf:
C:\Qt\5.3.2\mkspecs\features\win32\rtti.prf:
C:\Qt\5.3.2\mkspecs\features\precompile_header.prf:
C:\Qt\5.3.2\mkspecs\features\warn_on.prf:
C:\Qt\5.3.2\mkspecs\features\win32\windows.prf:
C:\Qt\5.3.2\mkspecs\features\testcase_targets.prf:
C:\Qt\5.3.2\mkspecs\features\yacc.prf:
C:\Qt\5.3.2\mkspecs\features\lex.prf:
src.pro:
qmake: FORCE
	@$(QMAKE) -o Makefile src.pro

qmake_all: sub-assistant-qmake_all sub-pixeltool-qmake_all sub-qtestlib-qmake_all sub-designer-qmake_all sub-linguist-qmake_all sub-qtpaths-qmake_all sub-windeployqt-qmake_all sub-qtdiag-qmake_all FORCE

make_first: sub-assistant-make_first sub-qtestlib-make_first sub-designer-make_first sub-linguist-make_first sub-qtpaths-make_first sub-windeployqt-make_first sub-qtdiag-make_first FORCE
all: sub-assistant-all sub-pixeltool-all sub-qtestlib-all sub-designer-all sub-linguist-all sub-qtpaths-all sub-windeployqt-all sub-qtdiag-all FORCE
clean: sub-assistant-clean sub-pixeltool-clean sub-qtestlib-clean sub-designer-clean sub-linguist-clean sub-qtpaths-clean sub-windeployqt-clean sub-qtdiag-clean FORCE
distclean: sub-assistant-distclean sub-pixeltool-distclean sub-qtestlib-distclean sub-designer-distclean sub-linguist-distclean sub-qtpaths-distclean sub-windeployqt-distclean sub-qtdiag-distclean FORCE
	-$(DEL_FILE) Makefile
install_subtargets: sub-assistant-install_subtargets sub-qtestlib-install_subtargets sub-designer-install_subtargets sub-linguist-install_subtargets sub-qtpaths-install_subtargets sub-windeployqt-install_subtargets sub-qtdiag-install_subtargets FORCE
uninstall_subtargets: sub-assistant-uninstall_subtargets sub-qtestlib-uninstall_subtargets sub-designer-uninstall_subtargets sub-linguist-uninstall_subtargets sub-qtpaths-uninstall_subtargets sub-windeployqt-uninstall_subtargets sub-qtdiag-uninstall_subtargets FORCE

sub-assistant-debug:
	@if not exist assistant\ mkdir assistant\ & if not exist assistant\ exit 1
	cd assistant\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\assistant\assistant.pro -o Makefile ) && $(MAKE) -f Makefile debug
sub-qtestlib-debug:
	@if not exist qtestlib\ mkdir qtestlib\ & if not exist qtestlib\ exit 1
	cd qtestlib\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtestlib\qtestlib.pro -o Makefile ) && $(MAKE) -f Makefile debug
sub-designer-debug:
	@if not exist designer\ mkdir designer\ & if not exist designer\ exit 1
	cd designer\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\designer\designer.pro -o Makefile ) && $(MAKE) -f Makefile debug
sub-linguist-debug: sub-designer-debug
	@if not exist linguist\ mkdir linguist\ & if not exist linguist\ exit 1
	cd linguist\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\linguist\linguist.pro -o Makefile ) && $(MAKE) -f Makefile debug
sub-qtpaths-debug:
	@if not exist qtpaths\ mkdir qtpaths\ & if not exist qtpaths\ exit 1
	cd qtpaths\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtpaths\qtpaths.pro -o Makefile ) && $(MAKE) -f Makefile debug
sub-windeployqt-debug:
	@if not exist windeployqt\ mkdir windeployqt\ & if not exist windeployqt\ exit 1
	cd windeployqt\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\windeployqt\windeployqt.pro -o Makefile ) && $(MAKE) -f Makefile debug
sub-qtdiag-debug:
	@if not exist qtdiag\ mkdir qtdiag\ & if not exist qtdiag\ exit 1
	cd qtdiag\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtdiag\qtdiag.pro -o Makefile ) && $(MAKE) -f Makefile debug
debug: sub-assistant-debug sub-qtestlib-debug sub-designer-debug sub-linguist-debug sub-qtpaths-debug sub-windeployqt-debug sub-qtdiag-debug

sub-assistant-release:
	@if not exist assistant\ mkdir assistant\ & if not exist assistant\ exit 1
	cd assistant\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\assistant\assistant.pro -o Makefile ) && $(MAKE) -f Makefile release
sub-qtestlib-release:
	@if not exist qtestlib\ mkdir qtestlib\ & if not exist qtestlib\ exit 1
	cd qtestlib\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtestlib\qtestlib.pro -o Makefile ) && $(MAKE) -f Makefile release
sub-designer-release:
	@if not exist designer\ mkdir designer\ & if not exist designer\ exit 1
	cd designer\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\designer\designer.pro -o Makefile ) && $(MAKE) -f Makefile release
sub-linguist-release: sub-designer-release
	@if not exist linguist\ mkdir linguist\ & if not exist linguist\ exit 1
	cd linguist\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\linguist\linguist.pro -o Makefile ) && $(MAKE) -f Makefile release
sub-qtpaths-release:
	@if not exist qtpaths\ mkdir qtpaths\ & if not exist qtpaths\ exit 1
	cd qtpaths\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtpaths\qtpaths.pro -o Makefile ) && $(MAKE) -f Makefile release
sub-windeployqt-release:
	@if not exist windeployqt\ mkdir windeployqt\ & if not exist windeployqt\ exit 1
	cd windeployqt\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\windeployqt\windeployqt.pro -o Makefile ) && $(MAKE) -f Makefile release
sub-qtdiag-release:
	@if not exist qtdiag\ mkdir qtdiag\ & if not exist qtdiag\ exit 1
	cd qtdiag\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtdiag\qtdiag.pro -o Makefile ) && $(MAKE) -f Makefile release
release: sub-assistant-release sub-qtestlib-release sub-designer-release sub-linguist-release sub-qtpaths-release sub-windeployqt-release sub-qtdiag-release

html_docs:
	$(MAKE) -f $(MAKEFILE) prepare_docs && $(MAKE) -f $(MAKEFILE) generate_docs

docs:
	$(MAKE) -f $(MAKEFILE) html_docs && $(MAKE) -f $(MAKEFILE) qch_docs

sub-assistant-install_html_docs:
	@if not exist assistant\ mkdir assistant\ & if not exist assistant\ exit 1
	cd assistant\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\assistant\assistant.pro -o Makefile ) && $(MAKE) -f Makefile install_html_docs
sub-qtestlib-install_html_docs:
	@if not exist qtestlib\ mkdir qtestlib\ & if not exist qtestlib\ exit 1
	cd qtestlib\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtestlib\qtestlib.pro -o Makefile ) && $(MAKE) -f Makefile install_html_docs
sub-designer-install_html_docs:
	@if not exist designer\ mkdir designer\ & if not exist designer\ exit 1
	cd designer\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\designer\designer.pro -o Makefile ) && $(MAKE) -f Makefile install_html_docs
sub-linguist-install_html_docs: sub-designer-install_html_docs
	@if not exist linguist\ mkdir linguist\ & if not exist linguist\ exit 1
	cd linguist\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\linguist\linguist.pro -o Makefile ) && $(MAKE) -f Makefile install_html_docs
sub-qtpaths-install_html_docs:
	@if not exist qtpaths\ mkdir qtpaths\ & if not exist qtpaths\ exit 1
	cd qtpaths\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtpaths\qtpaths.pro -o Makefile ) && $(MAKE) -f Makefile install_html_docs
sub-windeployqt-install_html_docs:
	@if not exist windeployqt\ mkdir windeployqt\ & if not exist windeployqt\ exit 1
	cd windeployqt\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\windeployqt\windeployqt.pro -o Makefile ) && $(MAKE) -f Makefile install_html_docs
sub-qtdiag-install_html_docs:
	@if not exist qtdiag\ mkdir qtdiag\ & if not exist qtdiag\ exit 1
	cd qtdiag\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtdiag\qtdiag.pro -o Makefile ) && $(MAKE) -f Makefile install_html_docs
install_html_docs: sub-assistant-install_html_docs sub-qtestlib-install_html_docs sub-designer-install_html_docs sub-linguist-install_html_docs sub-qtpaths-install_html_docs sub-windeployqt-install_html_docs sub-qtdiag-install_html_docs

sub-assistant-uninstall_html_docs:
	@if not exist assistant\ mkdir assistant\ & if not exist assistant\ exit 1
	cd assistant\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\assistant\assistant.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_html_docs
sub-qtestlib-uninstall_html_docs:
	@if not exist qtestlib\ mkdir qtestlib\ & if not exist qtestlib\ exit 1
	cd qtestlib\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtestlib\qtestlib.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_html_docs
sub-designer-uninstall_html_docs:
	@if not exist designer\ mkdir designer\ & if not exist designer\ exit 1
	cd designer\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\designer\designer.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_html_docs
sub-linguist-uninstall_html_docs: sub-designer-uninstall_html_docs
	@if not exist linguist\ mkdir linguist\ & if not exist linguist\ exit 1
	cd linguist\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\linguist\linguist.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_html_docs
sub-qtpaths-uninstall_html_docs:
	@if not exist qtpaths\ mkdir qtpaths\ & if not exist qtpaths\ exit 1
	cd qtpaths\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtpaths\qtpaths.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_html_docs
sub-windeployqt-uninstall_html_docs:
	@if not exist windeployqt\ mkdir windeployqt\ & if not exist windeployqt\ exit 1
	cd windeployqt\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\windeployqt\windeployqt.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_html_docs
sub-qtdiag-uninstall_html_docs:
	@if not exist qtdiag\ mkdir qtdiag\ & if not exist qtdiag\ exit 1
	cd qtdiag\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtdiag\qtdiag.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_html_docs
uninstall_html_docs: sub-assistant-uninstall_html_docs sub-qtestlib-uninstall_html_docs sub-designer-uninstall_html_docs sub-linguist-uninstall_html_docs sub-qtpaths-uninstall_html_docs sub-windeployqt-uninstall_html_docs sub-qtdiag-uninstall_html_docs

sub-assistant-install_qch_docs:
	@if not exist assistant\ mkdir assistant\ & if not exist assistant\ exit 1
	cd assistant\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\assistant\assistant.pro -o Makefile ) && $(MAKE) -f Makefile install_qch_docs
sub-qtestlib-install_qch_docs:
	@if not exist qtestlib\ mkdir qtestlib\ & if not exist qtestlib\ exit 1
	cd qtestlib\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtestlib\qtestlib.pro -o Makefile ) && $(MAKE) -f Makefile install_qch_docs
sub-designer-install_qch_docs:
	@if not exist designer\ mkdir designer\ & if not exist designer\ exit 1
	cd designer\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\designer\designer.pro -o Makefile ) && $(MAKE) -f Makefile install_qch_docs
sub-linguist-install_qch_docs: sub-designer-install_qch_docs
	@if not exist linguist\ mkdir linguist\ & if not exist linguist\ exit 1
	cd linguist\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\linguist\linguist.pro -o Makefile ) && $(MAKE) -f Makefile install_qch_docs
sub-qtpaths-install_qch_docs:
	@if not exist qtpaths\ mkdir qtpaths\ & if not exist qtpaths\ exit 1
	cd qtpaths\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtpaths\qtpaths.pro -o Makefile ) && $(MAKE) -f Makefile install_qch_docs
sub-windeployqt-install_qch_docs:
	@if not exist windeployqt\ mkdir windeployqt\ & if not exist windeployqt\ exit 1
	cd windeployqt\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\windeployqt\windeployqt.pro -o Makefile ) && $(MAKE) -f Makefile install_qch_docs
sub-qtdiag-install_qch_docs:
	@if not exist qtdiag\ mkdir qtdiag\ & if not exist qtdiag\ exit 1
	cd qtdiag\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtdiag\qtdiag.pro -o Makefile ) && $(MAKE) -f Makefile install_qch_docs
install_qch_docs: sub-assistant-install_qch_docs sub-qtestlib-install_qch_docs sub-designer-install_qch_docs sub-linguist-install_qch_docs sub-qtpaths-install_qch_docs sub-windeployqt-install_qch_docs sub-qtdiag-install_qch_docs

sub-assistant-uninstall_qch_docs:
	@if not exist assistant\ mkdir assistant\ & if not exist assistant\ exit 1
	cd assistant\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\assistant\assistant.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_qch_docs
sub-qtestlib-uninstall_qch_docs:
	@if not exist qtestlib\ mkdir qtestlib\ & if not exist qtestlib\ exit 1
	cd qtestlib\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtestlib\qtestlib.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_qch_docs
sub-designer-uninstall_qch_docs:
	@if not exist designer\ mkdir designer\ & if not exist designer\ exit 1
	cd designer\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\designer\designer.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_qch_docs
sub-linguist-uninstall_qch_docs: sub-designer-uninstall_qch_docs
	@if not exist linguist\ mkdir linguist\ & if not exist linguist\ exit 1
	cd linguist\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\linguist\linguist.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_qch_docs
sub-qtpaths-uninstall_qch_docs:
	@if not exist qtpaths\ mkdir qtpaths\ & if not exist qtpaths\ exit 1
	cd qtpaths\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtpaths\qtpaths.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_qch_docs
sub-windeployqt-uninstall_qch_docs:
	@if not exist windeployqt\ mkdir windeployqt\ & if not exist windeployqt\ exit 1
	cd windeployqt\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\windeployqt\windeployqt.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_qch_docs
sub-qtdiag-uninstall_qch_docs:
	@if not exist qtdiag\ mkdir qtdiag\ & if not exist qtdiag\ exit 1
	cd qtdiag\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtdiag\qtdiag.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_qch_docs
uninstall_qch_docs: sub-assistant-uninstall_qch_docs sub-qtestlib-uninstall_qch_docs sub-designer-uninstall_qch_docs sub-linguist-uninstall_qch_docs sub-qtpaths-uninstall_qch_docs sub-windeployqt-uninstall_qch_docs sub-qtdiag-uninstall_qch_docs

sub-assistant-install_docs:
	@if not exist assistant\ mkdir assistant\ & if not exist assistant\ exit 1
	cd assistant\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\assistant\assistant.pro -o Makefile ) && $(MAKE) -f Makefile install_docs
sub-qtestlib-install_docs:
	@if not exist qtestlib\ mkdir qtestlib\ & if not exist qtestlib\ exit 1
	cd qtestlib\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtestlib\qtestlib.pro -o Makefile ) && $(MAKE) -f Makefile install_docs
sub-designer-install_docs:
	@if not exist designer\ mkdir designer\ & if not exist designer\ exit 1
	cd designer\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\designer\designer.pro -o Makefile ) && $(MAKE) -f Makefile install_docs
sub-linguist-install_docs: sub-designer-install_docs
	@if not exist linguist\ mkdir linguist\ & if not exist linguist\ exit 1
	cd linguist\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\linguist\linguist.pro -o Makefile ) && $(MAKE) -f Makefile install_docs
sub-qtpaths-install_docs:
	@if not exist qtpaths\ mkdir qtpaths\ & if not exist qtpaths\ exit 1
	cd qtpaths\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtpaths\qtpaths.pro -o Makefile ) && $(MAKE) -f Makefile install_docs
sub-windeployqt-install_docs:
	@if not exist windeployqt\ mkdir windeployqt\ & if not exist windeployqt\ exit 1
	cd windeployqt\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\windeployqt\windeployqt.pro -o Makefile ) && $(MAKE) -f Makefile install_docs
sub-qtdiag-install_docs:
	@if not exist qtdiag\ mkdir qtdiag\ & if not exist qtdiag\ exit 1
	cd qtdiag\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtdiag\qtdiag.pro -o Makefile ) && $(MAKE) -f Makefile install_docs
install_docs: sub-assistant-install_docs sub-qtestlib-install_docs sub-designer-install_docs sub-linguist-install_docs sub-qtpaths-install_docs sub-windeployqt-install_docs sub-qtdiag-install_docs

sub-assistant-uninstall_docs:
	@if not exist assistant\ mkdir assistant\ & if not exist assistant\ exit 1
	cd assistant\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\assistant\assistant.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_docs
sub-qtestlib-uninstall_docs:
	@if not exist qtestlib\ mkdir qtestlib\ & if not exist qtestlib\ exit 1
	cd qtestlib\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtestlib\qtestlib.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_docs
sub-designer-uninstall_docs:
	@if not exist designer\ mkdir designer\ & if not exist designer\ exit 1
	cd designer\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\designer\designer.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_docs
sub-linguist-uninstall_docs: sub-designer-uninstall_docs
	@if not exist linguist\ mkdir linguist\ & if not exist linguist\ exit 1
	cd linguist\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\linguist\linguist.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_docs
sub-qtpaths-uninstall_docs:
	@if not exist qtpaths\ mkdir qtpaths\ & if not exist qtpaths\ exit 1
	cd qtpaths\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtpaths\qtpaths.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_docs
sub-windeployqt-uninstall_docs:
	@if not exist windeployqt\ mkdir windeployqt\ & if not exist windeployqt\ exit 1
	cd windeployqt\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\windeployqt\windeployqt.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_docs
sub-qtdiag-uninstall_docs:
	@if not exist qtdiag\ mkdir qtdiag\ & if not exist qtdiag\ exit 1
	cd qtdiag\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtdiag\qtdiag.pro -o Makefile ) && $(MAKE) -f Makefile uninstall_docs
uninstall_docs: sub-assistant-uninstall_docs sub-qtestlib-uninstall_docs sub-designer-uninstall_docs sub-linguist-uninstall_docs sub-qtpaths-uninstall_docs sub-windeployqt-uninstall_docs sub-qtdiag-uninstall_docs

sub-assistant-qch_docs:
	@if not exist assistant\ mkdir assistant\ & if not exist assistant\ exit 1
	cd assistant\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\assistant\assistant.pro -o Makefile ) && $(MAKE) -f Makefile qch_docs
sub-qtestlib-qch_docs:
	@if not exist qtestlib\ mkdir qtestlib\ & if not exist qtestlib\ exit 1
	cd qtestlib\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtestlib\qtestlib.pro -o Makefile ) && $(MAKE) -f Makefile qch_docs
sub-designer-qch_docs:
	@if not exist designer\ mkdir designer\ & if not exist designer\ exit 1
	cd designer\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\designer\designer.pro -o Makefile ) && $(MAKE) -f Makefile qch_docs
sub-linguist-qch_docs: sub-designer-qch_docs
	@if not exist linguist\ mkdir linguist\ & if not exist linguist\ exit 1
	cd linguist\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\linguist\linguist.pro -o Makefile ) && $(MAKE) -f Makefile qch_docs
sub-qtpaths-qch_docs:
	@if not exist qtpaths\ mkdir qtpaths\ & if not exist qtpaths\ exit 1
	cd qtpaths\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtpaths\qtpaths.pro -o Makefile ) && $(MAKE) -f Makefile qch_docs
sub-windeployqt-qch_docs:
	@if not exist windeployqt\ mkdir windeployqt\ & if not exist windeployqt\ exit 1
	cd windeployqt\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\windeployqt\windeployqt.pro -o Makefile ) && $(MAKE) -f Makefile qch_docs
sub-qtdiag-qch_docs:
	@if not exist qtdiag\ mkdir qtdiag\ & if not exist qtdiag\ exit 1
	cd qtdiag\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtdiag\qtdiag.pro -o Makefile ) && $(MAKE) -f Makefile qch_docs
qch_docs: sub-assistant-qch_docs sub-qtestlib-qch_docs sub-designer-qch_docs sub-linguist-qch_docs sub-qtpaths-qch_docs sub-windeployqt-qch_docs sub-qtdiag-qch_docs

sub-assistant-prepare_docs:
	@if not exist assistant\ mkdir assistant\ & if not exist assistant\ exit 1
	cd assistant\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\assistant\assistant.pro -o Makefile ) && $(MAKE) -f Makefile prepare_docs
sub-qtestlib-prepare_docs:
	@if not exist qtestlib\ mkdir qtestlib\ & if not exist qtestlib\ exit 1
	cd qtestlib\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtestlib\qtestlib.pro -o Makefile ) && $(MAKE) -f Makefile prepare_docs
sub-designer-prepare_docs:
	@if not exist designer\ mkdir designer\ & if not exist designer\ exit 1
	cd designer\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\designer\designer.pro -o Makefile ) && $(MAKE) -f Makefile prepare_docs
sub-linguist-prepare_docs: sub-designer-prepare_docs
	@if not exist linguist\ mkdir linguist\ & if not exist linguist\ exit 1
	cd linguist\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\linguist\linguist.pro -o Makefile ) && $(MAKE) -f Makefile prepare_docs
sub-qtpaths-prepare_docs:
	@if not exist qtpaths\ mkdir qtpaths\ & if not exist qtpaths\ exit 1
	cd qtpaths\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtpaths\qtpaths.pro -o Makefile ) && $(MAKE) -f Makefile prepare_docs
sub-windeployqt-prepare_docs:
	@if not exist windeployqt\ mkdir windeployqt\ & if not exist windeployqt\ exit 1
	cd windeployqt\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\windeployqt\windeployqt.pro -o Makefile ) && $(MAKE) -f Makefile prepare_docs
sub-qtdiag-prepare_docs:
	@if not exist qtdiag\ mkdir qtdiag\ & if not exist qtdiag\ exit 1
	cd qtdiag\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtdiag\qtdiag.pro -o Makefile ) && $(MAKE) -f Makefile prepare_docs
prepare_docs: sub-assistant-prepare_docs sub-qtestlib-prepare_docs sub-designer-prepare_docs sub-linguist-prepare_docs sub-qtpaths-prepare_docs sub-windeployqt-prepare_docs sub-qtdiag-prepare_docs

sub-assistant-generate_docs:
	@if not exist assistant\ mkdir assistant\ & if not exist assistant\ exit 1
	cd assistant\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\assistant\assistant.pro -o Makefile ) && $(MAKE) -f Makefile generate_docs
sub-qtestlib-generate_docs:
	@if not exist qtestlib\ mkdir qtestlib\ & if not exist qtestlib\ exit 1
	cd qtestlib\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtestlib\qtestlib.pro -o Makefile ) && $(MAKE) -f Makefile generate_docs
sub-designer-generate_docs:
	@if not exist designer\ mkdir designer\ & if not exist designer\ exit 1
	cd designer\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\designer\designer.pro -o Makefile ) && $(MAKE) -f Makefile generate_docs
sub-linguist-generate_docs: sub-designer-generate_docs
	@if not exist linguist\ mkdir linguist\ & if not exist linguist\ exit 1
	cd linguist\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\linguist\linguist.pro -o Makefile ) && $(MAKE) -f Makefile generate_docs
sub-qtpaths-generate_docs:
	@if not exist qtpaths\ mkdir qtpaths\ & if not exist qtpaths\ exit 1
	cd qtpaths\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtpaths\qtpaths.pro -o Makefile ) && $(MAKE) -f Makefile generate_docs
sub-windeployqt-generate_docs:
	@if not exist windeployqt\ mkdir windeployqt\ & if not exist windeployqt\ exit 1
	cd windeployqt\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\windeployqt\windeployqt.pro -o Makefile ) && $(MAKE) -f Makefile generate_docs
sub-qtdiag-generate_docs:
	@if not exist qtdiag\ mkdir qtdiag\ & if not exist qtdiag\ exit 1
	cd qtdiag\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtdiag\qtdiag.pro -o Makefile ) && $(MAKE) -f Makefile generate_docs
generate_docs: sub-assistant-generate_docs sub-qtestlib-generate_docs sub-designer-generate_docs sub-linguist-generate_docs sub-qtpaths-generate_docs sub-windeployqt-generate_docs sub-qtdiag-generate_docs

sub-assistant-check:
	@if not exist assistant\ mkdir assistant\ & if not exist assistant\ exit 1
	cd assistant\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\assistant\assistant.pro -o Makefile ) && $(MAKE) -f Makefile check
sub-qtestlib-check:
	@if not exist qtestlib\ mkdir qtestlib\ & if not exist qtestlib\ exit 1
	cd qtestlib\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtestlib\qtestlib.pro -o Makefile ) && $(MAKE) -f Makefile check
sub-designer-check:
	@if not exist designer\ mkdir designer\ & if not exist designer\ exit 1
	cd designer\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\designer\designer.pro -o Makefile ) && $(MAKE) -f Makefile check
sub-linguist-check: sub-designer-check
	@if not exist linguist\ mkdir linguist\ & if not exist linguist\ exit 1
	cd linguist\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\linguist\linguist.pro -o Makefile ) && $(MAKE) -f Makefile check
sub-qtpaths-check:
	@if not exist qtpaths\ mkdir qtpaths\ & if not exist qtpaths\ exit 1
	cd qtpaths\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtpaths\qtpaths.pro -o Makefile ) && $(MAKE) -f Makefile check
sub-windeployqt-check:
	@if not exist windeployqt\ mkdir windeployqt\ & if not exist windeployqt\ exit 1
	cd windeployqt\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\windeployqt\windeployqt.pro -o Makefile ) && $(MAKE) -f Makefile check
sub-qtdiag-check:
	@if not exist qtdiag\ mkdir qtdiag\ & if not exist qtdiag\ exit 1
	cd qtdiag\ && ( if not exist Makefile $(QMAKE) C:\qt\qttools-opensource-src-5.3.2\src\qtdiag\qtdiag.pro -o Makefile ) && $(MAKE) -f Makefile check
check: sub-assistant-check sub-qtestlib-check sub-designer-check sub-linguist-check sub-qtpaths-check sub-windeployqt-check sub-qtdiag-check
install: install_subtargets  FORCE

uninstall:  uninstall_subtargets FORCE

FORCE:

